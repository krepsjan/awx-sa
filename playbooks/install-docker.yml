---
# Mozne varianty, proc by tohle neproslo
# 1) neni misto na disku hostitele
# 2) neni konektivita na download.docker.com
# 3) ????
# je to single task, tedy dalo by se to cele zapouzdrit do nejakeho try
# a pokud se to nepovede, tak udelat alarm a vypsat ho do awx.
# Pripadne k tomu prihodit i nejake ty diagnosticke hlasky primo z ansible.
# 

# Komentar k tomuto playbooku, co se ma udelat, kdyz selze
# se musi nastavit v AWX, ne tady. I kdyz tady by to bylo lepsi, ale nevim
# jak toho docilit. Mozne reseni je pouzit lokalni vars pro playbook. Ty lze
# pouzit i pro tasky, takze by ovladaci javascript mohl z techto definic vypsat
# instrukce, co se ma v pripade neuspechu udelat. Test viz niz, description. 
- name: Ensure Docker is installed and running
  hosts: all
  become: true
  gather_facts: false
  vars:
    description: "Obratte se na oddeleni XXXYYYZZZ"

  tasks:

    - name: install dependencies
      register: result
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - cosi
      register: cmd_output

    # ================================================================
    # FIXME: tenhle pristup nefungoval. Predelat. 
    - name: Set error message for previous task
      set_fact:
        tower_response: "Nepodarilo se nainstalovat dependence pro Docker na {{ ansible_host }}"
      when: result is failed
    

    - set_fact:
        error_msg: Nepodarilo se pridat GPG klic
    - name: add GPG key
      apt_key:
        # url: https://download.docker.com/linux/ubuntu/gpg 
        url: "{{ docker_gpg_url }}"
        state: present


    - name: add docker repository to apt
      apt_repository:
        # repo: deb https://download.docker.com/linux/ubuntu bionic stable
        repo: "{{ docker_repo }}"
        state: present
    - name: install docker
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: check docker is active
      service:
        name: docker
        state: started
        enabled: yes

    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: adding ubuntu to docker group
      user:
        name: "{{ admin_user }}"
        groups: docker
        append: yes

    # Print as title
    - name: "tower_response=>{{ tower_response | to_json }}<="
      debug:
        msg: "Dummy message"



